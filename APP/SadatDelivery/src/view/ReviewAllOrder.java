/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import java.awt.BorderLayout;
import java.awt.Dimension;
import java.sql.Date;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.HashMap;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import services.ActionP;
import services.DB;

/**
 *
 * @author dirac
 */
public class ReviewAllOrder extends javax.swing.JInternalFrame {

    /**
     * Creates new form ReviewOrder
     */
    boolean clikedOnce = false;

    public ReviewAllOrder() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jb_search = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        PJS_inner = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        tx_phone_search = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        tx_order_search = new javax.swing.JTextField();
        jc_orderSearch = new javax.swing.JCheckBox();

        setClosable(true);
        setIconifiable(true);
        setTitle("مراجعة أوردرات العميل");

        jb_search.setText("تحديث");
        jb_search.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_searchMouseClicked(evt);
            }
        });

        PJS_inner.setLayout(new javax.swing.BoxLayout(PJS_inner, javax.swing.BoxLayout.PAGE_AXIS));
        jScrollPane1.setViewportView(PJS_inner);

        jLabel8.setText("التاريخ");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap(185, Short.MAX_VALUE)
                .addComponent(jLabel8)
                .addContainerGap())
            .addComponent(jScrollPane1)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(53, 53, 53))
        );

        tx_phone_search.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        tx_phone_search.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tx_phone_searchKeyPressed(evt);
            }
        });

        jLabel1.setText("رقم الهاتف");

        jLabel2.setText("رقم الاوردر");

        tx_order_search.setEditable(false);
        tx_order_search.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        tx_order_search.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tx_order_searchKeyPressed(evt);
            }
        });

        jc_orderSearch.setText("بحث برقم الاوردر");
        jc_orderSearch.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jc_orderSearchMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(82, 82, 82)
                .addComponent(jb_search, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jc_orderSearch))
                            .addComponent(tx_phone_search, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tx_order_search, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))))
                .addGap(71, 71, 71))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tx_phone_search, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jc_orderSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(tx_order_search, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addComponent(jb_search)
                .addGap(18, 18, 18)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, 421, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void startSearch() {
        if (jc_orderSearch.isSelected()) {
            tx_phone_search.setText("");
            tx_phone_search.setEditable(false);
            tx_order_search.setEditable(true);
            this.doAction("order");
        } else {
            tx_order_search.setText("");
            tx_order_search.setEditable(false);
            tx_phone_search.setEditable(true);
            this.doAction("phone");
        }
    }
    public void startTRX(){
          PJS_inner.removeAll();
        PJS_inner.revalidate();
        PJS_inner.repaint();
        startSearch();
    }
    private void jb_searchMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_searchMouseClicked
        startTRX();

    }//GEN-LAST:event_jb_searchMouseClicked

    private void tx_phone_searchKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tx_phone_searchKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER) {
           startTRX();
        }
    }//GEN-LAST:event_tx_phone_searchKeyPressed

    private void tx_order_searchKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tx_order_searchKeyPressed
       if(evt.getKeyCode() == evt.VK_ENTER){
           startTRX();
       }
    }//GEN-LAST:event_tx_order_searchKeyPressed

    private void jc_orderSearchMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jc_orderSearchMouseClicked
        if (jc_orderSearch.isSelected()) {
            tx_phone_search.setText("");
            tx_phone_search.setEditable(false);
            tx_order_search.setEditable(true);
        } else {
            tx_order_search.setText("");
            tx_order_search.setEditable(false);
            tx_phone_search.setEditable(true);
        }
    }//GEN-LAST:event_jc_orderSearchMouseClicked

    public void doAction(String sqlType) {
        // TODO add your handling code here:
        String sql = "";
        int order_ID = 0;
        if (sqlType.equals("phone")) {
            String phone = tx_phone_search.getText().toString();
            sql = "select customer_id , name from dl.customer where phone = '" + phone + "'";
        } else if (sqlType.equals("order")) {
             order_ID = Integer.parseInt(tx_order_search.getText().toString());
            sql = "select o.customer_id , c.name from DL.C_ORDER o\n"
                    + "left join DL.CUSTOMER c on O.CUSTOMER_ID = C.CUSTOMER_ID \n"
                    + "where O.C_ORDER_ID = " + order_ID;
        }
        int customer_ID = 0;
        int c_order_ID = 0;
        String customer_Name = "";
        String dateOrdered="" ;
        Map orders = new HashMap();
        Statement st;
        boolean dataFound = false;
        try {
            st = DB.getConnection().createStatement();
            ResultSet rs = st.executeQuery(sql);
            while (rs.next()) {
                dataFound = true;
                customer_ID = rs.getInt("customer_id");
                customer_Name = rs.getString("name");
            }
            st.close();
            rs.close();
            if (!dataFound) {
                if (jc_orderSearch.isSelected()) {
                    JOptionPane.showMessageDialog(null, "Order number does not exist");
                    return;
                } else {
                    JOptionPane.showMessageDialog(null, "Phone number does not exist");
                    return;
                }
            }
        } catch (Exception ex) {

            Logger.getLogger(ReviewAllOrder.class.getName()).log(Level.SEVERE, null, ex);
        }
        String sql2 ;
        if(jc_orderSearch.isSelected()){
              sql2 = "select o.c_order_id  from dl.c_order o  where c_order_id = " + order_ID;
        }else {
              sql2 = "select o.c_order_id  from dl.c_order o  where customer_id = " + customer_ID;
        }
       
        try {
            st = DB.getConnection().createStatement();
            ResultSet rs = st.executeQuery(sql2);
            int i = 1;
            while (rs.next()) {
                c_order_ID = rs.getInt("c_order_id");
          //      dateOrdered = rs.getString("dateordered");
                orders.put("order" + i, c_order_ID);
            //    orders.put("dateordered" + i, c_order_ID);
                i++;
            }
            st.close();
            rs.close();
        } catch (Exception ex) {
            Logger.getLogger(ReviewAllOrder.class.getName()).log(Level.SEVERE, null, ex);
        }
        int OrderNumber = 1000;

        for (Object order : orders.keySet()) {
            int i = 1;
            JButton mainButton = new JButton("Buttn #" + i);
            JPanel sidePan = new JPanel();
            sidePan.setBackground(new java.awt.Color(204, 153, 255));
            mainButton.setBackground(new java.awt.Color(255, 255, 255));
            mainButton.setName("Order #" + orders.get(order));
            mainButton.setLayout(new BorderLayout());
            mainButton.add(sidePan, BorderLayout.EAST);
            JLabel customerName = new JLabel();
            customerName.setText("Customer : " + customer_Name);
            customerName.setAlignmentX(CENTER_ALIGNMENT);
            JLabel orderDate = new JLabel();
            orderDate.setText("Date " + orders.get(order));
            orderDate.setAlignmentX(CENTER_ALIGNMENT);
            JPanel pandata = new JPanel();
            pandata.setLayout(new BorderLayout());
            pandata.add(orderDate, BorderLayout.BEFORE_FIRST_LINE);
            pandata.add(customerName, BorderLayout.AFTER_LAST_LINE);
            pandata.setBackground(new java.awt.Color(255, 255, 255));
            mainButton.add(pandata, BorderLayout.CENTER);
            JButton orderNo = new JButton("" + orders.get(order));
            orderNo.setName("OrderNo");
            OrderNumber = OrderNumber + 10;
            orderNo.addActionListener(new ActionP());
            pandata.add(orderNo, BorderLayout.CENTER);
            mainButton.addActionListener(new ActionP());
            mainButton.setPreferredSize(new Dimension(100, 100));
            mainButton.setName("b" + i);
            PJS_inner.add(mainButton);
            PJS_inner.revalidate();
            PJS_inner.repaint();
            i++;
            clikedOnce = true;
        }

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel PJS_inner;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jb_search;
    private javax.swing.JCheckBox jc_orderSearch;
    private javax.swing.JTextField tx_order_search;
    private javax.swing.JTextField tx_phone_search;
    // End of variables declaration//GEN-END:variables
}
